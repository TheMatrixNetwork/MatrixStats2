name: Build
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'frontend/**'

env:
  COPY_JARFILE_TO: '/Minecraft/Hardcore/plugins/ /Minecraft/Classic/plugins/'

jobs:
  build:

    runs-on: ubuntu-latest
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch.
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository


    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle

      - uses: actions/checkout@v3

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build -x test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mc-plugin
          path: "**/build/libs"

  test:

    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle

      - uses: actions/checkout@v3

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Test
        run: ./gradlew test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create Coverage
        run: ./gradlew jacocoTestReport
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload CodeCov Report
        uses: codecov/codecov-action@v3
        with:
          file: "**/build/reports/jacoco/**/*.xml"

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.24
        if: always()
        with:
          files: "**/build/test-results/**/*.xml"

  deploy:
    needs: [build, test]
    if: github.ref == 'refs/heads/master' || 'refs/heads/beta' || github.ref == 'refs/heads/alpha'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        name: Download artifact
        with:
          name: mc-plugin
          path: ./

      - name: deploy jar file
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: rm  /home/${{ secrets.USERNAME }}/*.jar

      - name: copy file via ssh
        uses: appleboy/scp-action@v0.1.4
        with:
          source: build/libs/*
          target: /home/${{ secrets.USERNAME }}
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          password: ${{ secrets.PASSWORD }}
          debug: true
          strip_components: 2
          overwrite: true

      - name: deploy jar file
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: rm  /home/${{ secrets.USERNAME }}/*-*-*.jar && echo "${{env.COPY_JARFILE_TO}}" | xargs -n 1 cp -v /home/${{ secrets.USERNAME }}/*.jar


  release:
    needs: [build, test]
    if: github.ref == 'refs/heads/master' || 'refs/heads/beta' || github.ref == 'refs/heads/alpha'

    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Set up Node.js v18.x
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Cache Gradle
        id: cache-gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle

      - uses: actions/checkout@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Grant execute permission for update-versions.sh
        run: chmod +x update-versions.sh

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_URL: "https://api.github.com/"
        run: npx --legacy-peer-deps -p @semantic-release/changelog -p @semantic-release/git -p @semantic-release/exec -p gradle-semantic-release-plugin -p semantic-release semantic-release
